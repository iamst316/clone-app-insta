{"ast":null,"code":"var _jsxFileName = \"/home/dashaanan/Desktop/Work/10X Academy/insta-clone/insta-clone/insta-clone/src/components/UploadForm.js\",\n  _s = $RefreshSig$();\nimport './UploadForm.css';\nimport { useState } from 'react';\nimport Header from './Header';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UploadForm() {\n  _s();\n  let [username, setUserName] = useState('');\n  let [location, setLocation] = useState('');\n  let [image, setImage] = useState('');\n  let [description, setDescription] = useState('');\n  let [fileName, setFileName] = useState('');\n  let [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  function postImage(event) {\n    event.preventDefault();\n    setMessage(\"Upload Successful. Redirecting....\");\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let date = new Date();\n    let postObject = {\n      \"username\": username,\n      \"location\": location,\n      \"date\": `${date.getDate()} ${monthNames[date.getMonth()]}`,\n      \"description\": description,\n      \"fileData\": image,\n      \"likes\": 0\n    };\n    fetch('https://insta-clone-sayo-back-end.onrender.com/upload', {\n      method: 'POST',\n      body: JSON.stringify(postObject),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(() => {\n      navigate('/postview');\n    });\n  }\n  function convertImage(event) {\n    setFileName(event.target.value);\n    let file = event.target.files[0];\n    let reader = new FileReader();\n    reader.onloadend = function () {\n      setImage(reader.result);\n    };\n    reader.readAsDataURL(file);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"upload-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"fileName\",\n          value: fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          children: [\"Upload\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"fileInput\",\n            onChange: e => convertImage(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Author\",\n          onChange: e => setUserName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"location\",\n          onChange: e => setLocation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Description\",\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: postImage,\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), message === '' ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(UploadForm, \"iDv5M040HGWznmlvyxWWfHBPg2A=\", false, function () {\n  return [useNavigate];\n});\n_c = UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["useState","Header","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadForm","_s","username","setUserName","location","setLocation","image","setImage","description","setDescription","fileName","setFileName","message","setMessage","navigate","postImage","event","preventDefault","monthNames","date","Date","postObject","getDate","getMonth","fetch","method","body","JSON","stringify","headers","then","convertImage","target","value","file","files","reader","FileReader","onloadend","result","readAsDataURL","children","_jsxFileName","lineNumber","columnNumber","className","id","htmlFor","type","onChange","e","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/dashaanan/Desktop/Work/10X Academy/insta-clone/insta-clone/insta-clone/src/components/UploadForm.js"],"sourcesContent":["import './UploadForm.css'\nimport { useState } from 'react'\nimport Header from './Header'\nimport { useNavigate } from 'react-router-dom'\n\nexport default function UploadForm() {\n\n    let [username, setUserName] = useState('')\n    let [location, setLocation] = useState('')\n    let [image, setImage] = useState('')\n    let [description, setDescription] = useState('')\n    let [fileName, setFileName] = useState('')\n    let [message, setMessage] = useState('')\n    const navigate = useNavigate()\n\n    function postImage(event) {\n        event.preventDefault()\n\n        setMessage(\"Upload Successful. Redirecting....\")\n\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n\n        let date = new Date()\n        let postObject = {\n            \"username\": username,\n            \"location\": location,\n            \"date\": `${date.getDate()} ${monthNames[date.getMonth()]}`,\n            \"description\": description,\n            \"fileData\": image,\n            \"likes\": 0\n        }\n\n        fetch('https://insta-clone-sayo-back-end.onrender.com/upload', {\n            method: 'POST',\n            body: JSON.stringify(postObject),\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8'\n            }\n        }).then(() => {\n            navigate('/postview')\n        })\n\n    }\n\n    function convertImage(event) {\n        setFileName(event.target.value)\n        let file = event.target.files[0]\n        let reader = new FileReader()\n        reader.onloadend = function () {\n            setImage(reader.result)\n        }\n        reader.readAsDataURL(file)\n    }\n\n\n    return <>\n        <Header />\n        <form className=\"upload-form\">\n            <div className=\"upload-form-row\">\n                <input id='fileName' value={fileName} />\n                <label htmlFor='fileInput'>\n                    Upload\n                    <input type='file' id='fileInput' onChange={(e) => convertImage(e)} />\n                </label>\n            </div>\n\n            <div className=\"upload-form-row\">\n                <input type='text' placeholder=\"Author\" onChange={(e) => setUserName(e.target.value)} />\n            </div>\n            <div className=\"upload-form-row\">\n                <input type='text' placeholder=\"location\" onChange={(e) => setLocation(e.target.value)} />\n            </div>\n\n            <div className=\"upload-form-row\">\n                <input type='text' placeholder=\"Description\" onChange={(e) => setDescription(e.target.value)} />\n            </div>\n            <div>\n                <button type='submit' onClick={postImage}>Post</button>\n                <br />\n                {message === '' ? <></> : message}\n            </div>\n        </form >\n    </>\n\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}